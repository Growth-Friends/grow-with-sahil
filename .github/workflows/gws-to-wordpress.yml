name: ðŸš€ Deploy website on push

on:
  push: # Deploy on push to the main branch
    branches:
      - main
  workflow_dispatch: # Enables the manual trigger

jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest

    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.17.0'  # Ensure Node.js version meets your project's requirements

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Create ZIP of out folder
      run: zip -r out.zip out

    - name: Upload ZIP to FTP server
      run: |
        curl -T out.zip ftp://u251186022:${{ secrets.FTP_PASSWORD }}@217.21.94.151/public_html/out.zip --user u251186022:${{ secrets.FTP_PASSWORD }}

    - name: Extract ZIP on server via FTP
      run: |
        curl --silent ftp://u251186022:${{ secrets.FTP_PASSWORD }}@217.21.94.151 --quote "CWD /public_html" --quote "RNFR out.zip" --quote "RNTO /out.zip" --quote "SITE UNZIP /public_html/out.zip"
        curl --silent ftp://u251186022:${{ secrets.FTP_PASSWORD }}@217.21.94.151 --quote "DELE /public_html/out.zip"

    - name: Clean up
      run: rm -f out.zip

    - name: Final cleanup (optional)
      if: always()
      run: |
        echo "Clean up done, no commit to repo."

  ftp-deploy:
    name: ðŸŽ‰ FTP Deploy
    runs-on: ubuntu-latest
    needs: web-deploy
    steps:
    - name: ðŸ“‚ Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ftp://217.21.94.151
        username: u251186022
        password: ${{ secrets.FTP_PASSWORD }} # Store your FTP password as a secret in GitHub
        local-dir: ./out/ # Make sure to match the local-dir with your actual output directory and end with a slash
        server-dir: /public_html/ # Must end with a trailing slash
        protocol: ftps # Use secure FTPS protocol
        port: 21
        log-level: standard
